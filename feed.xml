<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://dhkim900331.github.io/</id><title>donghyun.kim</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-01-06T09:56:07+09:00</updated> <author> <name>DongHyun Kim</name> <uri>https://dhkim900331.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://dhkim900331.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko-KR" href="https://dhkim900331.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 DongHyun Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[WebLogic] Serializable 란 무엇인가?</title><link href="https://dhkim900331.github.io/posts/weblogic_tip_9/" rel="alternate" type="text/html" title="[WebLogic] Serializable 란 무엇인가?" /><published>2021-12-20T19:31:57+09:00</published> <updated>2022-01-06T09:52:34+09:00</updated> <id>https://dhkim900331.github.io/posts/weblogic_tip_9/</id> <content src="https://dhkim900331.github.io/posts/weblogic_tip_9/" /> <author> <name>DongHyun Kim</name> </author> <category term="WAS" /> <category term="WebLogic" /> <summary> Contents 1. 개요 2. 바이트 스트림(Byte Stream) 3. 고수준과 저수준 4. 객체는 그래프 5. Serializable 6. RMI 1. 개요 Serializable 란 무엇인가? 2. 바이트 스트림(Byte Stream) 통신(네트워크, 입출력I/O)은 바이트 단위로 이루어 집니다. 그리고 이 통신을 스트림 이라고 합니다. 즉, 통신은 바이트 스트림으로 이루어진다고 할 수 있습니다. 3. 고수준과 저수준 그리고 이때 통신은 하드웨어적인 저수준과, 소프트웨어적인 고수준으로 구분할 수 있습니다. 고수준 통신을 사용하는 소프트웨어에서 문자 “a”를 전송하기 위해서는 저수준인 1바이트 0110 0001로 하드웨어에 전달해야 합니다. 여기서 하... </summary> </entry> <entry><title>[WebLogic] Serializable Test</title><link href="https://dhkim900331.github.io/posts/weblogic_tip_8/" rel="alternate" type="text/html" title="[WebLogic] Serializable Test" /><published>2021-12-20T19:31:57+09:00</published> <updated>2021-12-20T19:31:57+09:00</updated> <id>https://dhkim900331.github.io/posts/weblogic_tip_8/</id> <content src="https://dhkim900331.github.io/posts/weblogic_tip_8/" /> <author> <name>DongHyun Kim</name> </author> <category term="WAS" /> <category term="WebLogic" /> <summary> Contents 1. 개요 2. 테스트 어플리케이션 3. Serializable 가 구현되지 않았을 때 4. Serializable 구현되었을 때 1. 개요 세션 복제 될 데이터가 직렬화 되어있는 경우와 그렇지 않은 경우를 테스트해보았습니다. 이때 세션 데이터는 직렬화 구현이 필요한 클래스 객체로 구현해보았습니다. 2. 테스트 어플리케이션 webapp.zip 첨부파일의 FailoverTest.jsp는 원본입니다. FailoverTest_class.jsp는 페이지 로드 시 1씩 증가하는 Integer 데이터를 새로 생성한 클래스에 멤버 변수로 선언하여 저장하게 했습니다. 세션 데이터는 첨부파일의 sessionObject 클래스를 선언하여 멤버 변수에 저장합... </summary> </entry> <entry><title>[WebLogic] Maven 간단히 해볼까..?</title><link href="https://dhkim900331.github.io/posts/weblogic_tip_7/" rel="alternate" type="text/html" title="[WebLogic] Maven 간단히 해볼까..?" /><published>2021-12-20T19:31:57+09:00</published> <updated>2021-12-20T19:31:57+09:00</updated> <id>https://dhkim900331.github.io/posts/weblogic_tip_7/</id> <content src="https://dhkim900331.github.io/posts/weblogic_tip_7/" /> <author> <name>DongHyun Kim</name> </author> <category term="WAS" /> <category term="WebLogic" /> <summary> Contents 1. 개요 2. Version 별 문서 3. Maven 1. 개요 Maven 아주 진짜 너무 간단하게.. 2. Version 별 문서 웹로직 11g 메이븐 문서 웹로직 12c 메이븐 문서 3. Maven Phase를 실행하면, Phase에 속한 모든 goal가 실행된다. Table 3.1 Maven Lifecycle Phases은 maven의 기본 라이프 사이클 테이블을 보여주는 것이고, Table 3.2 Common Mapping of Goals to Phases는 웹로직에서 사용하는 단계와 골 들을 보여주는 정보이다. 즉 메이븐에서 제공하는 Table3.1을 웹로직에 맞는 Table3.2로 오라클이 maven 프로젝트를 개발하였다. # mvn p... </summary> </entry> <entry><title>[WebLogic] HttpSession, Cookie, JSESSIONID</title><link href="https://dhkim900331.github.io/posts/weblogic_tip_6/" rel="alternate" type="text/html" title="[WebLogic] HttpSession, Cookie, JSESSIONID" /><published>2021-12-20T19:31:57+09:00</published> <updated>2021-12-20T19:31:57+09:00</updated> <id>https://dhkim900331.github.io/posts/weblogic_tip_6/</id> <content src="https://dhkim900331.github.io/posts/weblogic_tip_6/" /> <author> <name>DongHyun Kim</name> </author> <category term="WAS" /> <category term="WebLogic" /> <summary> Contents 1. 개요 2. Cookie-Name 테스트 2.1 HttpSession과 Cookie, JSESSIONID (1). HttpSession (2). Cookie (3). JSESSIONID 2.2 apache에 cookie-name을 TESTSESSION으로 변경하고 cookie_detail.jsp 요청 - 1회 (1). 웹서버의 웹로직 모듈은 WebLogicCluster의 파라메터를 확인합니다. (2). 첫번째 서버(testlinux1.com)가 Alive 상태인지 확인합니다. (3)... </summary> </entry> <entry><title>[WebLogic] Cluster간 Session Replication</title><link href="https://dhkim900331.github.io/posts/weblogic_tip_5/" rel="alternate" type="text/html" title="[WebLogic] Cluster간 Session Replication" /><published>2021-12-20T19:31:57+09:00</published> <updated>2021-12-20T19:31:57+09:00</updated> <id>https://dhkim900331.github.io/posts/weblogic_tip_5/</id> <content src="https://dhkim900331.github.io/posts/weblogic_tip_5/" /> <author> <name>DongHyun Kim</name> </author> <category term="WAS" /> <category term="WebLogic" /> <summary> Contents 1. 개요 2. Session Replication 대상 3. Session Replication 조건 4. Instance Shutdown 시에 Primary와 Secondary Session 이동 5. 로컬에서 Replication Group 테스트 6. 로컬에서 Replication Group 테스트 - #2 1. 개요 WebLogic Cluster 의 Session 복제 조건을 알아본다. 2. Session Replication 대상 사용자가 was1번에 접속 시, 이를 Primary Server라 하며 Session을 생성. Primary Server에 생성된 Session Backup을 Secondary Server에 복제. S... </summary> </entry> </feed>
